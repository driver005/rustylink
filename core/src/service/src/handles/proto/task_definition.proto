//! `SeaORM` Entity, @generated by sea-orm-codegen 0.1.0



syntax = "proto3" ;

service TaskDefinition { rpc Get (GetTaskDefinition) returns (ResponseTaskDefinition) ; rpc List (ListTaskDefinition) returns (ResponseTaskDefinition) ; rpc Create (CreateTaskDefinition) returns (ResponseTaskDefinition) ; rpc Update (UpdateTaskDefinition) returns (ResponseTaskDefinition) ; rpc Delete (DeleteTaskDefinition) returns (ResponseTaskDefinition) ; rpc Response (ResponseTaskDefinition) returns (ResponseTaskDefinition) ; }

message GetTaskDefinition { string name = 1 ; optional string description = 2 ; int32 retry_count = 3 ; optional int64 timeout_seconds = 4 ; optional repeated string input_keys = 5 ; optional repeated string output_keys = 6 ; int32 timeout_policy = 7 ; int32 retry_logic = 8 ; int32 retry_delay_seconds = 9 ; int64 response_timeout_seconds = 10 ; optional int32 concurrent_exec_limit = 11 ; optional string input_template = 12 ; optional int32 rate_limit_per_frequency = 13 ; optional int32 rate_limit_frequency_in_seconds = 14 ; optional string isolation_group_id = 15 ; optional string execution_name_space = 16 ; optional string owner_email = 17 ; optional int32 poll_timeout_seconds = 18 ; int32 backoff_scale_factor = 19 ; optional string base_type = 20 ; optional string input_schema = 21 ; bool enforce_schema = 22 ; optional string output_schema = 23 ; string created_on = 24 ; optional string created_by = 25 ; string modified_on = 26 ; optional string modified_by = 27 ; }

message ListTaskDefinition { string name = 1 ; optional string description = 2 ; int32 retry_count = 3 ; optional int64 timeout_seconds = 4 ; optional repeated string input_keys = 5 ; optional repeated string output_keys = 6 ; int32 timeout_policy = 7 ; int32 retry_logic = 8 ; int32 retry_delay_seconds = 9 ; int64 response_timeout_seconds = 10 ; optional int32 concurrent_exec_limit = 11 ; optional string input_template = 12 ; optional int32 rate_limit_per_frequency = 13 ; optional int32 rate_limit_frequency_in_seconds = 14 ; optional string isolation_group_id = 15 ; optional string execution_name_space = 16 ; optional string owner_email = 17 ; optional int32 poll_timeout_seconds = 18 ; int32 backoff_scale_factor = 19 ; optional string base_type = 20 ; optional string input_schema = 21 ; bool enforce_schema = 22 ; optional string output_schema = 23 ; string created_on = 24 ; optional string created_by = 25 ; string modified_on = 26 ; optional string modified_by = 27 ; }

message CreateTaskDefinition { optional string description = 1 ; int32 retry_count = 2 ; optional int64 timeout_seconds = 3 ; optional repeated string input_keys = 4 ; optional repeated string output_keys = 5 ; int32 timeout_policy = 6 ; int32 retry_logic = 7 ; int32 retry_delay_seconds = 8 ; int64 response_timeout_seconds = 9 ; optional int32 concurrent_exec_limit = 10 ; optional string input_template = 11 ; optional int32 rate_limit_per_frequency = 12 ; optional int32 rate_limit_frequency_in_seconds = 13 ; optional string isolation_group_id = 14 ; optional string execution_name_space = 15 ; optional string owner_email = 16 ; optional int32 poll_timeout_seconds = 17 ; int32 backoff_scale_factor = 18 ; optional string base_type = 19 ; optional string input_schema = 20 ; bool enforce_schema = 21 ; optional string output_schema = 22 ; string created_on = 23 ; optional string created_by = 24 ; string modified_on = 25 ; optional string modified_by = 26 ; }

message UpdateTaskDefinition { optional string description = 1 ; int32 retry_count = 2 ; optional int64 timeout_seconds = 3 ; optional repeated string input_keys = 4 ; optional repeated string output_keys = 5 ; int32 timeout_policy = 6 ; int32 retry_logic = 7 ; int32 retry_delay_seconds = 8 ; int64 response_timeout_seconds = 9 ; optional int32 concurrent_exec_limit = 10 ; optional string input_template = 11 ; optional int32 rate_limit_per_frequency = 12 ; optional int32 rate_limit_frequency_in_seconds = 13 ; optional string isolation_group_id = 14 ; optional string execution_name_space = 15 ; optional string owner_email = 16 ; optional int32 poll_timeout_seconds = 17 ; int32 backoff_scale_factor = 18 ; optional string base_type = 19 ; optional string input_schema = 20 ; bool enforce_schema = 21 ; optional string output_schema = 22 ; string created_on = 23 ; optional string created_by = 24 ; string modified_on = 25 ; optional string modified_by = 26 ; }

message DeleteTaskDefinition { string name = 1 ; }

message ResponseTaskDefinition { string name = 1 ; optional string description = 2 ; int32 retry_count = 3 ; optional int64 timeout_seconds = 4 ; optional repeated string input_keys = 5 ; optional repeated string output_keys = 6 ; int32 timeout_policy = 7 ; int32 retry_logic = 8 ; int32 retry_delay_seconds = 9 ; int64 response_timeout_seconds = 10 ; optional int32 concurrent_exec_limit = 11 ; optional string input_template = 12 ; optional int32 rate_limit_per_frequency = 13 ; optional int32 rate_limit_frequency_in_seconds = 14 ; optional string isolation_group_id = 15 ; optional string execution_name_space = 16 ; optional string owner_email = 17 ; optional int32 poll_timeout_seconds = 18 ; int32 backoff_scale_factor = 19 ; optional string base_type = 20 ; optional string input_schema = 21 ; bool enforce_schema = 22 ; optional string output_schema = 23 ; string created_on = 24 ; optional string created_by = 25 ; string modified_on = 26 ; optional string modified_by = 27 ; }

enum EvaluatorType { Graaljs = 0 ; ValueParam = 1 ; }

enum ForkType { DifferentTask = 0 ; SameTask = 1 ; SameTaskSubWorkflow = 2 ; }

enum IdempotencyStrategy { Fail = 0 ; RunningExisting = 1 ; }

enum OperationType { Delete = 0 ; Insert = 1 ; Select = 2 ; Update = 3 ; }

enum RetryLogic { ExponentialBackoff = 0 ; Fixed = 1 ; LinearBackoff = 2 ; }

enum TaskStatus { Canceled = 0 ; Completed = 1 ; CompletedWithErrors = 2 ; Failed = 3 ; FailedWithTerminalError = 4 ; InProgress = 5 ; Scheduled = 6 ; Skipped = 7 ; TimedOut = 8 ; }

enum TaskTerminationStatus { Completed = 0 ; Failed = 1 ; Terminated = 2 ; }

enum TaskType { BuissnessRule = 0 ; DoWhile = 1 ; Dynamic = 2 ; Event = 3 ; ExclusiveJoin = 4 ; ForkJoin = 5 ; ForkJoinDynamic = 6 ; GetSignedJwt = 7 ; Http = 8 ; Human = 9 ; Inline = 10 ; Join = 11 ; JsonJqTransform = 12 ; KafkaPublish = 13 ; SetVariable = 14 ; Simple = 15 ; SqlTask = 16 ; StartWorkflow = 17 ; SubWorkflow = 18 ; Switch = 19 ; TerminateTask = 20 ; TerminateWorkflow = 21 ; UpdateSecret = 22 ; UpdateTask = 23 ; UserDefined = 24 ; Wait = 25 ; WaitForWebhook = 26 ; }

enum TimeoutPolicy { AlertOnly = 0 ; Retry = 1 ; TimedOutWf = 2 ; }