//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "dynamic")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false, column_type = "Text")]
	pub id: String,
	#[sea_orm(column_type = "Text")]
	pub task_configuration: String,
	#[sea_orm(column_type = "Text")]
	pub dynamic_task_name_param: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::taskconfig::Entity",
		from = "Column::TaskConfiguration",
		to = "super::taskconfig::Column::TaskId",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Taskconfig,
}

impl Related<super::taskconfig::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Taskconfig.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
