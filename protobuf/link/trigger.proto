syntax = "proto3";

package trigger;

service Trigger {
    rpc GetTriggers(GetTriggersRequest) returns (TriggerResponce) {}
    rpc GetTrigger(GetTriggerRequest) returns (TriggerResponce) {}
    rpc UpdateTrigger(UpdateTriggerRequest) returns (TriggerResponce) {}
    rpc CreateTrigger(CreateTriggerRequest) returns (TriggerResponce) {}
    rpc DeleteTrigger(DeleteTriggerRequest) returns (TriggerResponce) {}
    
}

enum EnabledMode {
    ORIGIN = 0;
    REPLICA = 1;
    ALWAYS = 2;
    DISABLED = 3;
}

enum Orientation {
    ROW = 0;
    STATEMENT = 1;
}

enum Activation {
    BEFORE = 0;
    AFTER = 1;
    INSTEAD_OF = 2;
}

message GetTriggersRequest {
    optional bool include_system_schemas = 1;
    repeated string included_schemas = 2;
    repeated string excluded_schemas = 3;
    optional int32 limit = 4;
    optional int32 offset = 5;
}

message GetTriggerRequest {
    string id = 1;
}

message UpdateTriggerRequest {
    string id = 1;
    optional string name = 2;
    optional EnabledMode enabled_mode = 3;
}

message CreateTriggerRequest {
    string name = 1;
    string table = 2;
    string function_name = 3;
    string activation = 4;
    repeated string events = 5;
    optional string function_schema = 6;
    optional string schema = 7;
    optional string orientation = 8;
    optional string condition = 9;
    repeated string function_args = 10;
}

message DeleteTriggerRequest {
    string id = 1;
    optional bool cascade = 2;
}


message TriggerResponce {
    int32 id = 1;
    int32 table_id = 2;
    optional EnabledMode enabled_mode = 3;
    string name = 4;
    string table = 5;
    string schema = 6;
    optional string condition = 7;
    optional Orientation orientation = 8;
    optional Activation activation = 9;
    repeated string events = 10;
    string function_schema = 11;
    string function_name = 12;
    repeated string function_args = 13;
}