//! `SeaORM` Entity, @generated by sea-orm-codegen 0.1.0



message GetLineItem { string id = 0 ; optional string cart_id = 1 ; optional string order_id = 2 ; optional string swap_id = 3 ; string title = 4 ; optional string description = 5 ; optional string thumbnail = 6 ; bool is_giftcard = 7 ; bool should_merge = 8 ; bool allow_discounts = 9 ; optional bool has_shipping = 10 ; int32 unit_price = 11 ; optional string variant_id = 12 ; int32 quantity = 13 ; optional int32 fulfilled_quantity = 14 ; optional int32 returned_quantity = 15 ; optional int32 shipped_quantity = 16 ; string created_at = 17 ; string updated_at = 18 ; optional string metadata = 19 ; optional string claim_order_id = 20 ; bool is_return = 21 ; optional string original_item_id = 22 ; optional string order_edit_id = 23 ; }

message ListLineItem { string id = 0 ; optional string cart_id = 1 ; optional string order_id = 2 ; optional string swap_id = 3 ; string title = 4 ; optional string description = 5 ; optional string thumbnail = 6 ; bool is_giftcard = 7 ; bool should_merge = 8 ; bool allow_discounts = 9 ; optional bool has_shipping = 10 ; int32 unit_price = 11 ; optional string variant_id = 12 ; int32 quantity = 13 ; optional int32 fulfilled_quantity = 14 ; optional int32 returned_quantity = 15 ; optional int32 shipped_quantity = 16 ; string created_at = 17 ; string updated_at = 18 ; optional string metadata = 19 ; optional string claim_order_id = 20 ; bool is_return = 21 ; optional string original_item_id = 22 ; optional string order_edit_id = 23 ; }

message CreateLineItem { optional string cart_id = 0 ; optional string order_id = 1 ; optional string swap_id = 2 ; string title = 3 ; optional string description = 4 ; optional string thumbnail = 5 ; bool is_giftcard = 6 ; bool should_merge = 7 ; bool allow_discounts = 8 ; optional bool has_shipping = 9 ; int32 unit_price = 10 ; optional string variant_id = 11 ; int32 quantity = 12 ; optional int32 fulfilled_quantity = 13 ; optional int32 returned_quantity = 14 ; optional int32 shipped_quantity = 15 ; string created_at = 16 ; string updated_at = 17 ; optional string metadata = 18 ; optional string claim_order_id = 19 ; bool is_return = 20 ; optional string original_item_id = 21 ; optional string order_edit_id = 22 ; }

message UpdateLineItem { optional string cart_id = 0 ; optional string order_id = 1 ; optional string swap_id = 2 ; string title = 3 ; optional string description = 4 ; optional string thumbnail = 5 ; bool is_giftcard = 6 ; bool should_merge = 7 ; bool allow_discounts = 8 ; optional bool has_shipping = 9 ; int32 unit_price = 10 ; optional string variant_id = 11 ; int32 quantity = 12 ; optional int32 fulfilled_quantity = 13 ; optional int32 returned_quantity = 14 ; optional int32 shipped_quantity = 15 ; string created_at = 16 ; string updated_at = 17 ; optional string metadata = 18 ; optional string claim_order_id = 19 ; bool is_return = 20 ; optional string original_item_id = 21 ; optional string order_edit_id = 22 ; }

message DeleteLineItem { string id = 0 ; }

message ResponseLineItem { string id = 0 ; optional string cart_id = 1 ; optional string order_id = 2 ; optional string swap_id = 3 ; string title = 4 ; optional string description = 5 ; optional string thumbnail = 6 ; bool is_giftcard = 7 ; bool should_merge = 8 ; bool allow_discounts = 9 ; optional bool has_shipping = 10 ; int32 unit_price = 11 ; optional string variant_id = 12 ; int32 quantity = 13 ; optional int32 fulfilled_quantity = 14 ; optional int32 returned_quantity = 15 ; optional int32 shipped_quantity = 16 ; string created_at = 17 ; string updated_at = 18 ; optional string metadata = 19 ; optional string claim_order_id = 20 ; bool is_return = 21 ; optional string original_item_id = 22 ; optional string order_edit_id = 23 ; }

enum PaymentCollectionStatusEnum { Authorized = 0 ; Awaiting = 1 ; Canceled = 2 ; NotPaid = 3 ; PartiallyAuthorized = 4 ; }

enum PaymentCollectionTypeEnum { OrderEdit = 0 ; }

enum CartTypeEnum { Claim = 0 ; Default = 1 ; DraftOrder = 2 ; PaymentLink = 3 ; Swap = 4 ; }

enum ClaimItemReasonEnum { MissingItem = 0 ; Other = 1 ; ProductionFailure = 2 ; WrongItem = 3 ; }

enum ClaimOrderFulfillmentStatusEnum { Canceled = 0 ; Fulfilled = 1 ; NotFulfilled = 2 ; PartiallyFulfilled = 3 ; PartiallyReturned = 4 ; PartiallyShipped = 5 ; RequiresAction = 6 ; Returned = 7 ; Shipped = 8 ; }

enum ClaimOrderPaymentStatusEnum { Na = 0 ; NotRefunded = 1 ; Refunded = 2 ; }

enum ClaimOrderTypeEnum { Refund = 0 ; Replace = 1 ; }

enum DiscountConditionOperatorEnum { In = 0 ; NotIn = 1 ; }

enum DiscountConditionTypeEnum { CustomerGroups = 0 ; ProductCollections = 1 ; ProductTags = 2 ; ProductTypes = 3 ; Products = 4 ; }

enum DiscountRuleAllocationEnum { Item = 0 ; Total = 1 ; }

enum DiscountRuleTypeEnum { Fixed = 0 ; FreeShipping = 1 ; Percentage = 2 ; }

enum DraftOrderStatusEnum { Completed = 0 ; Open = 1 ; }

enum InviteRoleEnum { Admin = 0 ; Developer = 1 ; Member = 2 ; }

enum OrderFulfillmentStatusEnum { Canceled = 0 ; Fulfilled = 1 ; NotFulfilled = 2 ; PartiallyFulfilled = 3 ; PartiallyReturned = 4 ; PartiallyShipped = 5 ; RequiresAction = 6 ; Returned = 7 ; Shipped = 8 ; }

enum OrderItemChangeTypeEnum { ItemAdd = 0 ; ItemRemove = 1 ; ItemUpdate = 2 ; }

enum OrderPaymentStatusEnum { Awaiting = 0 ; Canceled = 1 ; Captured = 2 ; NotPaid = 3 ; PartiallyRefunded = 4 ; Refunded = 5 ; RequiresAction = 6 ; }

enum OrderStatusEnum { Archived = 0 ; Canceled = 1 ; Completed = 2 ; Pending = 3 ; RequiresAction = 4 ; }

enum PaymentSessionStatusEnum { Authorized = 0 ; Canceled = 1 ; Error = 2 ; Pending = 3 ; RequiresMore = 4 ; }

enum PriceListStatusEnum { Active = 0 ; Draft = 1 ; }

enum PriceListTypeEnum { Override = 0 ; Sale = 1 ; }

enum ProductStatusEnum { Draft = 0 ; Proposed = 1 ; Published = 2 ; Rejected = 3 ; }

enum RefundReasonEnum { Claim = 0 ; Discount = 1 ; Other = 2 ; Return = 3 ; Swap = 4 ; }

enum ReturnStatusEnum { Canceled = 0 ; Received = 1 ; Requested = 2 ; RequiresAction = 3 ; }

enum ShippingOptionPriceTypeEnum { Calculated = 0 ; FlatRate = 1 ; }

enum ShippingOptionRequirementTypeEnum { MaxSubtotal = 0 ; MinSubtotal = 1 ; }

enum ShippingProfileTypeEnum { Custom = 0 ; Default = 1 ; GiftCard = 2 ; }

enum SwapFulfillmentStatusEnum { Canceled = 0 ; Fulfilled = 1 ; NotFulfilled = 2 ; PartiallyShipped = 3 ; RequiresAction = 4 ; Shipped = 5 ; }

enum SwapPaymentStatusEnum { Awaiting = 0 ; Canceled = 1 ; Captured = 2 ; Confirmed = 3 ; DifferenceRefunded = 4 ; NotPaid = 5 ; PartiallyRefunded = 6 ; Refunded = 7 ; RequiresAction = 8 ; }

enum UserRoleEnum { Admin = 0 ; Developer = 1 ; Member = 2 ; }