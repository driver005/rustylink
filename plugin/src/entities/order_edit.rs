//! `SeaORM` Entity, @generated by sea-orm-codegen 0.1.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(schema_name = "public", table_name = "order_edit")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub id: String,
	pub created_at: DateTimeWithTimeZone,
	pub updated_at: DateTimeWithTimeZone,
	pub order_id: String,
	pub internal_note: Option<String>,
	pub created_by: String,
	pub requested_by: Option<String>,
	pub requested_at: Option<DateTimeWithTimeZone>,
	pub confirmed_by: Option<String>,
	pub confirmed_at: Option<DateTimeWithTimeZone>,
	pub declined_by: Option<String>,
	pub declined_reason: Option<String>,
	pub declined_at: Option<DateTimeWithTimeZone>,
	pub canceled_by: Option<String>,
	pub canceled_at: Option<DateTimeWithTimeZone>,
	pub payment_collection_id: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(has_many = "super::line_item::Entity")]
	LineItem,
	#[sea_orm(
		belongs_to = "super::order::Entity",
		from = "Column::OrderId",
		to = "super::order::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	Order,
	#[sea_orm(has_many = "super::order_item_change::Entity")]
	OrderItemChange,
	#[sea_orm(
		belongs_to = "super::payment_collection::Entity",
		from = "Column::PaymentCollectionId",
		to = "super::payment_collection::Column::Id",
		on_update = "NoAction",
		on_delete = "NoAction"
	)]
	PaymentCollection,
}

impl Related<super::line_item::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::LineItem.def()
	}
}

impl Related<super::order::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::Order.def()
	}
}

impl Related<super::order_item_change::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::OrderItemChange.def()
	}
}

impl Related<super::payment_collection::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::PaymentCollection.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelatedEntity)]
pub enum RelatedEntity {
	#[sea_orm(entity = "super::line_item::Entity")]
	LineItem,
	#[sea_orm(entity = "super::order::Entity")]
	Order,
	#[sea_orm(entity = "super::order_item_change::Entity")]
	OrderItemChange,
	#[sea_orm(entity = "super::payment_collection::Entity")]
	PaymentCollection,
}
